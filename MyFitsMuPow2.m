function [fitresult, gof] = MyFitsMuPow2(Pf, mu,ns)
%CREATEFITS(PF,MU)
%  Create fits.
%
%  Data for 'ns1_power1' fit:
%      X Input : Pf
%      Y Output: mu
%  Data for 'ns1_power2' fit:
%      X Input : Pf
%      Y Output: mu
%  Data for 'exp2' fit:
%      X Input : Pf
%      Y Output: mu
%  Data for 'ns1_rat21' fit:
%      X Input : Pf
%      Y Output: mu
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 21-Oct-2015 14:24:05

%% Initialization.
% i=2;Pf=myfitgroup{i,1}(:,1);mu=myfitgroup{i,1}(:,2);Pfix=myfitgroup{i,1}(:,3);
% ns=i;
% Initialize arrays to store fits and goodness-of-fit.
fontsize=15;
fitresult = cell( 2, 1 );
gof = struct( 'sse', cell( 2, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );
maxmu=max(mu);
minmu=min(mu);
txtwidth=(maxmu-minmu)/4;
txtposy=maxmu-txtwidth;

minPf=min(Pf);
maxPf=max(Pf);
ylims=[0.75,1];
ylimsres=[-0.02,0.03];
txtposx=(minPf+maxPf)/2;
% iternum0=200;
% stopeps=0.001;

figure(ns);
%% Fit: 'ns1_power2'.
[xData, yData] = prepareCurveData( Pf, mu );

% Set up fittype and options.
ft = fittype( 'power2' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Algorithm = 'Levenberg-Marquardt';

opts.Display = 'Off';
% opts.StartPoint = [0.0106945315846686 -0.975627188324542 0.030171985325082];

% Fit model to data.
% [fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

subplot(2,1,1);
% Plot fit with data.
% figure( 'Name', 'ns1_power2' );
h = plot( fitresult{2}, xData, yData,'predobs', 0.95 );
% paranames=coeffnames(fitresult{2});
paravalues=coeffvalues(fitresult{2});
parabnds=confint(fitresult{2});
legend( h, '\mu_m_i_n vs. P_f_,_I_L_S', 'y=p1*x^p^2+p3', 'Lower bounds', 'Upper bounds','Location', 'SouthWest' );
title('f_\mu(x)=p1*x^p^2+p3');
xlabel ('P_f_,_I_L_S');
ylabel ('\mu_m_i_n');

str1=strcat('p1= ',num2str(paravalues(1)));
str2=strcat('p2= ',num2str(paravalues(2)));
str3=strcat('p3= ',num2str(paravalues(3)));

str4=strcat('RMSE: ',num2str(gof(2).rmse));
% str7=strcat('ReRMSE: ',num2str(RealRMSE));

text(txtposx,txtposy,str1,'FontSize',fontsize); 
text(txtposx,txtposy-txtwidth,str2,'FontSize',fontsize);
text(txtposx,txtposy-2*txtwidth,str3,'FontSize',fontsize);
text(txtposx,txtposy-3*txtwidth,str4,'FontSize',fontsize);
% text(txtposx,txtposy-4*txtwidth,str5);
% text(txtposx,txtposy-5*txtwidth,str6);
% text(txtposx,txtposy-6*txtwidth,str7);

set(gca,'FontSize',fontsize);
grid on
ylim(ylims);
subplot(2,1,2);
plot(fitresult{2},xData,yData,'Residuals');
ylim(ylimsres);
xlabel ('P_f_,_I_L_S');

set(gca,'FontSize',fontsize);
legend('Residuals','Zero line');

grid on;

set(gcf,'units','normalized','outerposition',[0 0 1 1]);

